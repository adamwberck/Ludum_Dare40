<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Init Vari

//display_set_gui_size(640,390);

startHover = false;
quitHover  = false;

keyboard   = true;
gamepad    = false;


alarmSet = false;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>room_goto_next();
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="1">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Keyboard/Gamepad check
var tkeyboard = 
keyboard_check(vk_left)           
|| keyboard_check(ord("A"))
|| keyboard_check(vk_right)          
|| keyboard_check(ord("D"))
|| keyboard_check(vk_up)             
|| keyboard_check_pressed(ord('X'))  
|| keyboard_check_pressed(ord("W"))
||keyboard_check(ord('Z'))          
|| keyboard_check(vk_space)
||keyboard_check_released(ord('Z')) 
|| keyboard_check_released(vk_space)
||keyboard_check_pressed(ord('Z')) 
||mouse_check_button(mb_left)
||mouse_check_button(mb_right);



var tgamepad = 
gamepad_axis_value(0, gp_axislv) &lt; -0.40
||gamepad_axis_value(0, gp_axislh) &gt;  0.40
||gamepad_axis_value(0, gp_axislh) &lt; -0.40
||gamepad_button_check_pressed(0, gp_face1)
||gamepad_button_check_released(0, gp_face1)
||gamepad_button_check_released(0, gp_face1)
||gamepad_button_check_pressed(0, gp_face2)
||gamepad_button_check(0,gp_shoulderrb)
||gamepad_button_check(0,gp_shoulderlb);

if(tkeyboard){
    keyboard = true;
    gamepad = false;
}else if(tgamepad){
    keyboard = false;
    gamepad = true;
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if(keyboard){
    if(mouse_x&gt;220&amp;&amp;mouse_x&lt;410){
        if(mouse_y&gt;90&amp;&amp;mouse_y&lt;150){
            startHover = true;
            quitHover  = false;
        }
        else if(mouse_y&gt;210&amp;&amp;mouse_y&lt;280){
            startHover = false;
            quitHover  = true;        
        }
        else{
            startHover = false;
            quitHover  = false;
        }
    }
    else{
        startHover = false;
        quitHover  = false;    
    }
}

if(gamepad)
{
    var up   = gamepad_axis_value(0,gp_axislv) &lt; -0.40;
    var down = gamepad_axis_value(0,gp_axislv) &gt; 0.75;
    if(up){
        startHover = true;
        quitHover  = false;
    }
    else if(down){
        quitHover  = true;
        startHover = false;
    }
    
    if(gamepad_button_check_pressed(0,gp_face1)
       ||gamepad_button_check_pressed(0,gp_start)){
        if(startHover){
            room_goto_next();
        }
        if(quitHover){
            game_end();
        }
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="6" enumb="50">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>var mX = mouse_x;
var mY = mouse_y;
if(room==rmMainMenu){
if(startHover){
        room_goto_next();
    }
    if(quitHover){
        game_end()
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="64">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///GUI! Text on Screen
var guiWidth = display_get_gui_width();
var guiHeight = display_get_gui_height();

draw_set_font(font0);

draw_set_halign(fa_center);
draw_set_valign(fa_middle);
if(room_get_name(room)=="rmYouWin"){
    draw_text(guiWidth/2,guiHeight/2,"YOU WIN!");
    if(!alarmSet){
        alarmSet = true;
        alarm[0]=180;
    }
    if(alarmSet &amp;&amp; keyboard_check_pressed(vk_escape)){
        alarm[0]=1;
    }
}
else if(room_get_name(room)=="rmTitle"){
    draw_set_font(font0);
    draw_text(guiWidth/2,guiHeight/3,"Watch For Thieves");
    draw_set_font(font1);
        draw_text(guiWidth/2,guiHeight/3*2,"By AW Berck");
    draw_set_font(font0);
    if(!alarmSet){
        alarmSet = true;
        alarm[0]=180;
    }
    if(alarmSet &amp;&amp; keyboard_check_pressed(vk_escape)){
        alarm[0]=1;
    }
}
else
{
    
    
    if(startHover){
        draw_set_colour(c_yellow);
    }
    else{
        draw_set_colour(c_white);
    }
    
    draw_text(guiWidth/2,guiHeight/3,"START");
    
    if(quitHover){
        draw_set_colour(c_yellow);
    }
    else{
        draw_set_colour(c_white);
    }
    
    draw_text(guiWidth/2,guiHeight * 2/3,"QUIT");
}


</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
