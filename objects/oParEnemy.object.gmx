<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>sEnemy</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>oParEntity</parentName>
  <maskName>sEnemyMask</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Brightness
event_inherited();
brightness = 100;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="1" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///death affect
var corpse = instance_create(x,y,oCorpse);
with(corpse){
    vx=other.corvx;
    vy=other.corvy-5;
    sprite_index = other.sprite_index;
    image_xscale = other.image_xscale;
    image_angle  = 180+(other.image_angle);
}
visible=false;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="2">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Pause/FreezeCheck
if(scFreezeCheck() == true) exit;
if(scPauseCheck()  == true) exit;
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Movement with collision
// Handle sub-pixel movement
cx += vx;
cy += vy;
vxNew = round(cx);
vyNew = round(cy);
cx -= vxNew;
cy -= vyNew;

jumped = false;
landed = false;

var isShell = object_get_name(object_index)==("oShell") 
    || object_get_name(object_index)==("oShellR");

//verticle movement
repeat(abs(vyNew)) {

    if (!PlatformCheck()){
        y += sign(vy);
    } else {
        vy = 0;
        onGround = true;
        break;
    }
}

if (platformTarget) {
    if (!onGround)
        landed = true;
    
    if (landed)
        with (platformTarget) other.vy = 0;
    else
        with (platformTarget) other.vy = 0;
}

//x movement as well as handling slopes
r=0;
q=0;
var shell;
repeat(abs(vxNew)) {
    //var w=0, e=0;
    moved = false;
    q = sign(vx);
    while (abs(q) &lt; 2){
        r = 5;
        repeat(10){
            if (!place_meeting(x+q,y+r,oParSolid) &amp;&amp; !place_meeting(x+q,y+r,oBrick)){
            //only move if place is free
                if (r &lt;= 0 || place_meeting(x,y+1,oParSolid)||place_meeting(x,y+1,oBrick)){
                //if onground or slope goes up then MOVE
                    if(place_meeting(x+q,y+r,oPlayer)){
                        var player = instance_place(x+q,y+r,oPlayer){
                            with(player) {
                                scPlayerHitCheck();
                            }
                        }
                    }
                    x += q;
                    y += r;
                    w += 1;
                    e -= r;
                    moved = true;
                    break;
                } 
            }
            if(place_meeting(x+q,y,oBrick)&amp;&amp;isShell){
                var brick = instance_place(x+q,y,oBrick){
                    with(brick) {
                        sidehit = true;
                    }
                }
            } 
            r -= 1;
        }
    q += sign(vx);
    }
    if (!moved){
        vx = 0;
        break;
    }
}

if (w&gt;=5) {
    slope = round(e/abs(w)*2)/2 ;
    w=0;
    e=0;
};

// Pit death
if (bbox_right &lt; 0 || bbox_left &gt; room_width || bbox_top &gt; room_height || bbox_bottom &lt; 0){
    instance_destroy();
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Illumination

if(!illuminated)
    illumination = 0;

illuminated = false;
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///flashlight
var i;

for (i = 0; i &lt; instance_number(oParEntity); i++){
    var entity = instance_find(oParEntity,i);
    var inFlashlight = point_in_triangle(entity.x,entity.y,
        x,y,x+brightness*facing,y-10,x+brightness*facing,y+10);
    if(inFlashlight &amp;&amp; entity != self){
       scEntityLight(brightness,entity);
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///sprite
if(state==scLeft){
    image_xscale=-1;
}else{
    image_xscale=1;
}

draw_sprite_ext(sprite_index,image_index,x,y
    ,image_xscale,image_yscale,0,0,1);

if(!damaged){
    draw_sprite_ext(sprite_index,image_index,x,y
        ,image_xscale,image_yscale,image_angle,c_white,illumination);
}else{
    draw_sprite_ext(sGhostHurt,image_index,x,y
    ,image_xscale,image_yscale,image_angle,c_white,illumination);    
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>1</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
